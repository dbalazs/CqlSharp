<?xml version="1.0"?>
<package >
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>CQLSharp - An ADO.NET Data Provider for Cassandra</title>
    <authors>Joost Reuzel</authors>
    <owners>Joost Reuzel</owners>
    <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
    <projectUrl>https://github.com/reuzel/CqlSharp/wiki</projectUrl>
    <iconUrl>https://raw.github.com/reuzel/CqlSharp/master/logo.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>
      CqlSharp is a high performance, asynchronous Cassandra CQL binary protocol client implementing the ADO.NET data provider interfaces. 
    
      See https://github.com/reuzel/CqlSharp/wiki/Features for an extensive feature list.
    </summary>
    <description>
      CqlSharp is a high performance, asynchronous Cassandra CQL binary protocol client implementing the ADO.NET data provider interfaces.

      It's main features are:
      * The API implements the ADO.NET interfaces. If you are familiar with SqlConnection, SqlCommand, and SqlReader, you should be able to use CqlSharp with no difficulty.
      * CqlSharp is an implementation of the (new) CQL Binary Protocol and therefore requires Cassandra 1.2 and up
      * CqlSharp supports all the binary protocol v2 features: batching, paging, bound query variables, result schema caching, check-and-set (CAS) statements, and sasl-authentication
      * Supports fast mapping of objects to query parameters, or query results to objects. Mapping is tunable by decorating your classes via Table and Column attributes.
      * Query tracing, timeouts and cancellation is supported
      * The API is predominately [asynchronous](http://msdn.microsoft.com/en-us/library/vstudio/hh191443.aspx), heavily relying on the System.Threading.Tasks namespace. Synchronous alternatives are available for convenience.
      * Configuration is done through connection strings. The simultaneous use of multiple Cassandra clusters is supported.
      * Extensive logging, including support for custom logger implementations
      
      See https://github.com/reuzel/CqlSharp/wiki/Features for an extensive feature list.
    </description>
    <releaseNotes>
      ## Version 0.36.0 - Fixes and Development support
      * Fixing situation where queries using a pagesize are ended with a data frame with no contents
      * Fix of protocol negotiation flow for older Cassandra versions
      * Exposing supported CQL version from CqlConnection
      * Allowing the primary CQL* classes to be subclassed (e.g. allowing them to be mocked)
      * Introducing a non-generic interface to ObjectAccessor{T}
      
      ## Version 0.35.0 - Make ExecuteScalar according to spec.
      * Fix: ExecuteScalar now returns null in case no row was found, and DBNull.Value if the database column value is null

      ## Version 0.34.0 - Socket options
      * Adding socket options: connect timeout, Linger state, KeepAlive, SendBufferSize, and ReceiveBufferSize
      * Fix: Proper CqlException returned when no cluster nodes can be reached

      ## Version 0.33.0 - Improved transaction handling
      * Improved state management of transaction
      * Adding Reset to CqlTransaction, allowing reuse of transaction objects
      * Adding CqlError class, to expose Cql error details (including trace ids) as LastQueryResult on CqlCommand

      ...

      See https://github.com/reuzel/CqlSharp/blob/master/ChangeLog.md for the full changelog.
    </releaseNotes>
    <copyright>Copyright 2014 Joost Reuzel</copyright>
    <tags>Cassandra CQL ADO.NET client database provider driver nosql net45 TPL async high-performance CqlSharp</tags>
  </metadata>
</package>